{"version":3,"sources":["webpack:///./src/helpers/BitCell.js","webpack:///./src/components/BitExplosions.js","webpack:///./src/pages/index.js"],"names":["checkExplosion","a","b","exploded","distX","x","distY","y","Math","sqrt","size","explosionSize","explode","rand","max","min","random","BitCell","c","ctx","w","h","settings","cells","cellsExplored","img","this","expImg","r","g","parseInt","isNaN","tempCanvas","document","createElement","width","height","imgCtx","getContext","gradient","createRadialGradient","applyMask","value","mask","abs","addColorStop","fillStyle","fillRect","generateFireBall","m","maxSize","minSize","mm","initSize","vx","maxSpeed","vy","maxSizeExp","expV","stepExplosion","update","s","s2","moveTo","splice","indexOf","now","firstExplosionDegree","undefined","push","drawImage","l","length","speedExplosionX","speedExplosionY","killTimer","inGame","maxColor","minColor","composite","limitParticles","channelsR","channelsG","channelsB","nextInit","growth_rate","BitExplosions","componentDidMount","refs","canvas","window","innerWidth","amount","getPrerenderedBit","bit","prerenderedBit","font","fillText","prerenderedBits","click","e","touches","cell","layerX","layerY","init","anim","requestAnimationFrame","save","globalCompositeOperation","strokeStyle","beginPath","stroke","restore","console","log","i","n","addEventListener","render","ref","style","position","top","left","background","cursor","React","Component","IndexPage","location","Layout","containerStyle","maxWidth","paddingTop","SEO","title","keywords","justifyContent","alignItems","color","textAlign","p","zIndex","className","styles","to"],"mappings":"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","file":"component---src-pages-index-js-ceda62c7bfba8fa94d19.js","sourcesContent":["/**\n * @param {BitCell} a\n * @param {BitCell} b\n */\nfunction checkExplosion(a, b) {\n  if (b.exploded)\n    return\n\n  var distX = a.x - b.x,\n    distY = a.y - b.y,\n    dist = Math.sqrt((distX * distX) + (distY * distY)) - (b.size / 2)\n  dist <= a.explosionSize &&\n    b.explode()\n}\n\n/**\n * Generate a neon ball\n * @param {Number} w width\n * @param {Number} h height\n * @param {Number} r\n * @param {Number} g\n * @param {Number} b\n * @param {Number} a alpha\n * @returns {HTMLCanvasElement}\n */\nfunction generateFireBall(w, h, a, r, g, b) {\n\n  r = parseInt(r)\n  r = isNaN(r) || r > 255 ? 255 : r\n  g = parseInt(g)\n  g = isNaN(g) || g > 255 ? 255 : g\n  b = parseInt(b);\n  b = isNaN(b) || b > 255 ? 255 : b\n\n  var tempCanvas = document.createElement(\"canvas\")\n\n  tempCanvas.width = w\n  tempCanvas.height = h\n\n  var imgCtx = tempCanvas.getContext(\"2d\")\n  var gradient = imgCtx.createRadialGradient(w / 2, h / 2, 0, w / 2, h / 2, w / 2)\n\n  //TODO fix for implement other colors\n  function applyMask(value, mask) {\n    value = Math.abs((value * mask / 255) | 0)\n    return value < 256 ? value : 255\n  }\n\n  gradient.addColorStop(0, 'rgba(' + [applyMask(r, 255), applyMask(g, 255), applyMask(b, 255), a] + ')')\n  gradient.addColorStop(0.3, 'rgba(' + [applyMask(r, 254), applyMask(g, 239), applyMask(b, 29), a] + ')')\n  gradient.addColorStop(0.4, 'rgba(' + [applyMask(r, 254), applyMask(g, 88), applyMask(b, 29), a] + ')')\n  gradient.addColorStop(0.6, 'rgba(' + [applyMask(r, 239), applyMask(g, 27), applyMask(b, 51), a * .05] + ')')\n  gradient.addColorStop(0.88, 'rgba(' + [applyMask(r, 153), applyMask(g, 10), applyMask(b, 27), a * .05] + ')')\n  gradient.addColorStop(0.92, 'rgba(' + [applyMask(r, 254), applyMask(g, 39), applyMask(b, 17), a * .1] + ')')\n  gradient.addColorStop(0.98, 'rgba(' + [applyMask(r, 254), applyMask(g, 254), applyMask(b, 183), a * .2] + ')')\n  gradient.addColorStop(1, 'rgba(' + [applyMask(r, 254), applyMask(g, 39), applyMask(b, 17), 0] + ')')\n\n  imgCtx.fillStyle = gradient\n  imgCtx.fillRect(0, 0, w, h)\n\n  return tempCanvas\n}\n\nfunction rand(max, min) {\n  min = min || 0\n  return (Math.random() * (max - min)) + min\n}\n\nexport default class BitCell {\n  constructor(c, ctx, w, h, settings, cells, cellsExplored, img, size, x, y) {\n    this.ctx = ctx\n    this.w = w\n    this.h = h\n    this.settings = settings\n    this.cells = cells\n    this.cellsExplored = cellsExplored\n    this.img = img\n    this.expImg = generateFireBall(64, 64, 0.2, 255, c.g, c.b)\n\n    var m = settings.maxSize > settings.minSize ? settings.maxSize : settings.minSize,\n      mm = m === settings.maxSize ? settings.minSize : settings.maxSize\n\n    this.size = size || Math.random() * (m - mm) + mm\n    this.initSize = this.size\n    this.x = x || Math.random() * w\n    this.y = y || Math.random() * h\n    this.vx = Math.random() * settings.maxSpeed * 2 - settings.maxSpeed\n    this.vy = Math.random() * settings.maxSpeed * 2 - settings.maxSpeed\n    this.exploded = false\n    this.explosionSize = settings.maxSizeExp / 5\n    this.expV = settings.stepExplosion\n  }\n\n  update() {\n\n    var s = this.size * 2,\n      s2 = s / 2\n\n    if (!this.exploded) {\n      this.ctx.moveTo(this.x, this.y)\n    }\n\n    this.x += this.vx * rand(rand(5))\n    this.y += this.vy * rand(rand(5))\n\n    if (this.x < 0 || this.x > this.w) {\n      this.vx *= -1\n      this.x = this.x > 0 ? this.w : 0\n    }\n    if (this.y < 0 || this.y > this.h) {\n      this.vy *= -1\n      this.y = this.y > 0 ? this.h : 0\n    }\n\n    if (!this.exploded) {\n      this.ctx.drawImage(this.img, this.x - s2, this.y - s2)\n      return\n    }\n\n    this.explosionSize += this.expV / this.explosionSize * 10\n\n    if (this.size > 0) {\n      this.size -= 0.05\n    }\n\n    if (this.explosionSize > this.settings.maxSizeExp * 2) {\n      this.expV *= -1\n      this.vx *= 0\n      this.vy *= 0\n    } else if (this.explosionSize < 0) {\n      this.cellsExplored.splice(this.cellsExplored.indexOf(this), 1)\n      return\n    }\n\n    s = this.explosionSize *\n      (this.now && this.now-- ? 2 : 1 * ((this.settings.firstExplosionDegree - (this.now || 0))) || 1)\n\n    if (this.now === undefined) {\n      this.cells.splice(this.cells.indexOf(this), 1)\n      this.cellsExplored.push(this)\n    }\n\n    this.now = this.now || this.settings.firstExplosionDegree\n    s2 = s / 2\n\n    this.ctx.drawImage(this.expImg, this.x - s2, this.y - s2, s, s)\n\n    var l = this.cells.length\n    while (l--)\n      checkExplosion(this, this.cells[l])\n  }\n\n  explode() {\n    this.exploded = true\n    this.vx *= this.settings.speedExplosionX\n    this.vy *= this.settings.speedExplosionY\n  }\n}\n","import React from 'react'\nimport BitCell from '../helpers/BitCell'\n\nvar inGame = false,\n  cells = [],\n  cellsExplored = [],\n  settings = Settings(),\n  nextInit = false,\n  killTimer,\n  growth_rate = 4\n\nfunction Settings() {\n  return {\n    maxSize: 6,\n    minSize: 2,\n    maxSpeed: 2,\n    speedExplosionX: 0,\n    speedExplosionY: 0,\n    firstExplosionDegree: 10,\n    stepExplosion: 3,\n    maxSizeExp: 14,\n    maxColor: 255,\n    minColor: 10,\n    composite: 'lighter',\n    limitParticles: 1999,\n    channelsR: false,\n    channelsG: true,\n    channelsB: true,\n  }\n}\n\nexport default class BitExplosions extends React.Component {\n  componentDidMount() {\n    const c = this.refs.canvas\n    const ctx = c.getContext('2d')\n    const w = window.innerWidth\n    const h = 760\n    let amount = ((w * h) / 1024) | 0\n\n    function getPrerenderedBit(bit) {\n      var prerenderedBit = document.createElement('canvas')\n      prerenderedBit.width = 24\n      prerenderedBit.height = 24\n      var ctx = prerenderedBit.getContext('2d')\n      ctx.font = '12px sans-serif'\n      ctx.fillStyle = '#1a801a'\n      ctx.fillText(bit, 0, 12)\n      return prerenderedBit\n    }\n    \n    var prerenderedBits = [\n      getPrerenderedBit('0'),\n      getPrerenderedBit('1'),\n    ]\n\n    function click(e) {\n      if (!inGame) {\n        init()\n      } else {\n        e = e.touches && e.touches.length ? e.touches[0] : e\n        var cell = new BitCell(c, ctx, w, h, settings, cells, cellsExplored, prerenderedBits[Math.random() < 0.5 ? 1 : 0], settings.maxSize, e.layerX, e.layerY)\n        cells.push(cell)\n        cell.explode()\n      }\n    }\n\n    c.addEventListener('click', click, false)\n    c.addEventListener('touchstart', click, false)\n\n    function anim() {\n      if (nextInit) {\n        nextInit = false\n        return init()\n      }\n\n      if (inGame)\n        window.requestAnimationFrame(anim)\n\n      ctx.save()\n\n      ctx.globalCompositeOperation = 'destination-out'\n      ctx.fillStyle = 'rgb(0, 0, 0)'\n      ctx.fillRect(0, 0, w, h)\n      ctx.globalCompositeOperation = settings.composite\n\n      ctx.fillStyle = \"none\"\n      ctx.strokeStyle = '#fff'\n      ctx.beginPath()\n\n      var l = cells.length\n      while (l--)\n        cells[l].update()\n\n      l = cellsExplored.length\n      while (l--)\n        cellsExplored[l].update()\n\n      ctx.stroke()\n      ctx.restore()\n\n      if (!cells.length && !cellsExplored.length)\n        gameOver()\n\n      if (cells.length < amount) {\n        for (var i = growth_rate; i >= 0; i--) {\n          cells.push(new BitCell(c, ctx, w, h, settings, cells, cellsExplored, prerenderedBits[Math.random() < 0.5 ? 1 : 0]))\n        }\n      }\n    }\n\n\n    function gameOver() {\n      inGame = killTimer-- > 0\n      if (!inGame) {\n        console.log('restarting')\n        restart()\n      }\n    }\n\n    function init() {\n      amount = amount > settings.limitParticles ? settings.limitParticles : amount\n\n      c.width = w\n      c.height = h\n\n      ctx.fillStyle = 'black'\n      ctx.fillRect(0, 0, w, h)\n\n      cells.splice(0)\n      cellsExplored.splice(0)\n\n      var n = amount\n      while (n--) {\n        cells.push(new BitCell(c, ctx, w, h, settings, cells, cellsExplored, prerenderedBits[Math.random() < 0.5 ? 1 : 0]))\n      }\n\n      inGame = true\n      killTimer = 30\n\n      anim()\n    }\n\n    function restart() {\n      nextInit = true\n      if (!inGame) {\n        init()\n      }\n    }\n\n    init()\n  }\n  render() {\n    return (\n      <canvas\n        ref=\"canvas\"\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          height: 760,\n          width: '100%',\n          background: '#000',\n          cursor: 'crosshair',\n        }}\n      />\n    )\n  }\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { Box, Flex } from \"rebass\"\n\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/SEO\"\nimport BitExplosions from \"../components/BitExplosions\"\n\nimport styles from '../styles/index.module.css'\n\n\nconst IndexPage = ({location}) => (\n  <Layout containerStyle={{maxWidth: null, paddingTop: 0}} location={location}>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <div style={{height: 760, background: 'black', position: 'relative'}}>\n      <BitExplosions/>\n      <Flex justifyContent=\"center\" alignItems=\"center\" style={{height: '100%', color: 'white', textAlign: 'center'}}>\n        <Box p={3} style={{zIndex: 2}} className={styles[\"textBanner\"]}>\n          <h1>ByteBandits</h1>\n          <p>Hide yo' bytes, hide yo' bits, or be pwn'd by ByteBandits!</p>\n          <p>We are <Link to=\"/team\">team</Link> of hackers and geeks with our roots from IIT Indore.</p>\n          <p>Check out some of our <Link to=\"/writeups\">writeups</Link> for some CTF problems.</p>\n        </Box>\n      </Flex>\n    </div>\n  </Layout>\n)\n\nexport default IndexPage\n"],"sourceRoot":""}