{"version":3,"sources":["webpack:///./src/pages/writeups.js"],"names":["data","location","useState","selectedProblemType","setSelectedProblemType","selectedCTF","setSelectedCTF","useEffect","console","log","useSelectedCTF","selectedAuthor","setSelectedAuthor","writeups","allSitePage","edges","filter","node","path","match","length","map","Writeup","authors","w","author","elem","pos","arr","indexOf","problemTypes","problemType","ctfNames","ctfName","non_writeups","warn","title","style","margin","minHeight","flexWrap","mx","m","fontSize","color","onChange","e","target","value","undefined","a","key","justifyContent","alignItems","writeup","idx","href","textDecoration","className","styles","card","background","getBG","p","bg","borderRadius","boxShadow","problemName","query"],"mappings":"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","file":"component---src-pages-writeups-js-19eb80446681f4b7da31.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/SEO\"\nimport { Flex, Box, Card } from 'rebass'\nimport styles from '../styles/writeups.module.css'\nimport Writeup from '../models/Writeup'\n\n\nconst useSelectedCTF = () => {\n  const [selectedCTF, setSelectedCTF] = useState()\n  useEffect(() => console.log('a different CTF was selected'), [selectedCTF])\n  return [selectedCTF, setSelectedCTF]\n}\n\n\nexport default ({ data, location }) => {\n  const [selectedProblemType, setSelectedProblemType] = useState()\n  const [selectedCTF, setSelectedCTF] = useSelectedCTF()\n  const [selectedAuthor, setSelectedAuthor] = useState()\n\n  let writeups = data.allSitePage.edges\n    .filter(({node}) => (node.path.match(/\\//g) || []).length === 5)\n    .map(({node}) => new Writeup(node.path))\n\n  const authors = writeups.map((w) => w.author).filter((elem, pos, arr) => arr.indexOf(elem) === pos)\n  const problemTypes = writeups.map((w) => w.problemType).filter((elem, pos, arr) => arr.indexOf(elem) === pos)\n  const ctfNames = writeups.map((w) => w.ctfName).filter((elem, pos, arr) => arr.indexOf(elem) === pos)\n\n  const non_writeups = data.allSitePage.edges.filter(({node}) => (node.path.match(/\\//g) || []).length !== 5)\n  if (non_writeups.length > 0) {\n    console.warn(\"Some non writeup pages were skipped\")\n    console.warn(non_writeups)\n  }\n\n  if (selectedProblemType && selectedProblemType !== 'All') {\n    writeups = writeups.filter((w) => w.problemType === selectedProblemType)\n  }\n\n  if (selectedCTF && selectedCTF !== 'All') {\n    writeups = writeups.filter((w) => w.ctfName === selectedCTF)\n  }\n\n  if (selectedAuthor && selectedAuthor !== 'All') {\n    writeups = writeups.filter((w) => w.author === selectedAuthor)\n  }\n\n  return (\n    <Layout location={location}>\n      <SEO title=\"Writeups\" />\n      <div style={{margin: '24px auto 64px', minHeight: 640}}>\n        <h1>Writeups</h1>\n        <Flex flexWrap='wrap' mx={-2}>\n          <Box m={2}>\n          <div style={{fontSize: '0.66em', color: 'grey'}}>Type</div>\n            <select onChange={(e) => setSelectedProblemType(e.target.value)}>\n              <option value={undefined}>All</option>\n              {\n                problemTypes.map((a) =>\n                  <option value={a} key={a}>\n                    {a}\n                  </option>\n                )\n              }\n            </select>\n          </Box>\n          <Box m={2}>\n            <div style={{fontSize: '0.66em', color: 'grey'}}>CTF</div>\n            <select onChange={(e) => setSelectedCTF(e.target.value)}>\n              <option value={undefined}>All</option>\n              {\n                ctfNames.map((a) =>\n                  <option value={a} key={a}>\n                    {a}\n                  </option>\n                )\n              }\n            </select>\n          </Box>\n          <Box m={2}>\n            <div style={{fontSize: '0.66em', color: 'grey'}}>Author</div>\n            <select onChange={(e) => setSelectedAuthor(e.target.value)}>\n              <option value={undefined}>All</option>\n              {\n                authors.map((a) =>\n                  <option value={a} key={a}>\n                    {a}\n                  </option>\n                )\n              }\n            </select>\n          </Box>\n        </Flex>\n        <Flex flexWrap='wrap' mx={-2} justifyContent='center' alignItems='center'>\n          {writeups.map((writeup, idx) =>\n            <a\n              href={writeup.path}\n              style={{\n                color: 'inherit',\n                textDecoration: 'none',\n              }}\n              key={idx}\n            >\n              <Card\n                className={styles.card}\n                style={{\n                  background: writeup.getBG(),\n                }}\n                p={3}\n                m={3}\n                bg='#ffffff'\n                borderRadius={4}\n                boxShadow='0 0 4px rgba(0, 0, 0, 0.16)'\n              >\n                <p>{writeup.problemName}</p>\n                <p>{writeup.problemType}</p>\n                <p>{writeup.ctfName}</p>\n                <p>{writeup.author}</p>\n              </Card>\n            </a>\n          )}\n        </Flex>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allSitePage(\n      filter: {\n        path: {\n          regex: \"/.*\\/writeups\\/.+$/i\"\n        }\n      },\n    ) {\n      edges {\n        node {\n          id\n          path\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}