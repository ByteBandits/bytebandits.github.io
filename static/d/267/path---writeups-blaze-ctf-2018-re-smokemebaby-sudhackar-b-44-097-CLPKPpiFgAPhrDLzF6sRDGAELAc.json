{"pageContext":{"html":"<p><a href=\"ctf=blaze-2018\"></a>\n<a href=\"type=re\"></a>\n<a href=\"tags=game\"></a>\n<a href=\"techniques=bruteforce\"></a></p>\n<h1>smokemebaby (re-420)</h1>\n<pre><code>get this files\n\nsolve at: smokeme.420blaze.in tcp 12345\n\nauthor: vito\n\nsolves: ~30\n</code></pre>\n<p>This was a rust compiled binary. In main()->check(), there were 39 check<em>i functions to verify the i'th character based on some equations.\nIf the check failed check</em>i() returned i as the exit code. This made it perfect for bruteforce. Iterate through your keyspace unless the exit code increases, repeat.</p>\n<p>driver script </p>\n<pre><code class=\"language-python\">import subprocess\nimport string\n\nprev = [\"A\" for i in xrange(42)]\n\n#flag = \"on anntada ona? Somebnefbbeafd roia me a\"\nflag = \"\"\nfor i, j in enumerate(flag):\n    prev[i] = j\n\nfor i in xrange(len(flag),42):\n    cnt = []\n    for j in string.lowercase+string.digits+string.uppercase+\" &#x3C;>,.?/\\\"\\':;{}[]\\\\~`!@#$%^&#x26;*()_+=-\":\n        prev[i] = j \n        open(\"input\", \"w+\").write(\"\".join(prev)) \n        d = subprocess.Popen(\"gdb -q -x ./plz.py \", shell=True, stdout=subprocess.PIPE).stdout.read().strip()\n        try:\n            c = int(d.split(\":::::\")[1])\n            # print c,\n        except:\n            c = -1\n        cnt.append((c,j))\n    print cnt\n    best = sorted(cnt ,key=lambda x: x[0], reverse=True)[0]\n    prev[i] = best[1]\n    print \"\".join(prev)\n\n\"\"\"\necho -ne \"on anntada ona? Somebnefbbeafd roia me a\"| base64 |nc smokeme.420blaze.in 12345\nsend your solution as base64, followed by a newline\n96667aaad70646abc06a8b44b1016e94e3897dd5a95dff21b6e7a9628a823d06\nThe flag is: blaze{a0ddb69ede14231576e7f0241623723385814f32}\n\"\"\"\n</code></pre>\n<p>gdb helper</p>\n<pre><code class=\"language-python\">import gdb\n\ngdb.execute('file ../96667aaad70646abc06a8b44b1016e94e3897dd5a95dff21b6e7a9628a823d06')\ngdb.execute(\"set verbose off\")\ngdb.execute(\"run &#x3C; input > output\")\ngdb.execute(\"set confirm off\")\nexit = int(gdb.parse_and_eval(\"$_exitcode\").cast(gdb.lookup_type('uint32_t')))\nprint(\":::::%d:::::\" % exit)\ngdb.execute('quit')\n</code></pre>","relativePath":"writeups/blaze-ctf-2018/re/smokemebaby/sudhackar"}}