{"pageContext":{"html":"<p><a href=\"ctf=hack.lu-2015\"></a>\n<a href=\"type=coding\"></a>\n<a href=\"tags=random\"></a></p>\n<h1>GuessTheNumber (coding-150)</h1>\n<pre><code>The teacher of your programming class gave you a tiny little task: just write a guess-my-number script that beats his script. He also gave you some hard facts:\nhe uses some LCG with standard glibc LCG parameters\nthe LCG is seeded with server time using number format YmdHMS (python strftime syntax)\nnumbers are from 0 up to (including) 99\nnumbers should be sent as ascii string\nYou can find the service on school.fluxfingers.net:1523\n</code></pre>\n<pre><code class=\"language-bash\">$ nc school.fluxfingers.net 1523\nWelcome to the awesome guess-my-number game!\nIt's 22.10.2015 today and we have 13:01:49 on the server right now. Today's goal is easy: \njust guess my 100 numbers on the first try within at least 30 seconds from now on.\nAin't difficult, right?\nNow, try the first one:\n99\nWrong! You lost the game. The right answer would have been '61'. Quitting.\n</code></pre>\n<p>So here we have a random number generator and we have to guess 100 numbers on the server.\nSearching about LCG we land on <a href=\"http://rosettacode.org/wiki/Linear_congruential_generator#C\">this</a> page.\nThe seed is given by the server in the message.It is the standard rand_r function in glibc with same parameters. Also all numbers are less than 100 so we need a mod 100 for each number.</p>\n<pre><code class=\"language-c\">int main(int argc, char **argv)\n{\n    rseed = atoi(argv[1]);\n    int i;\n    for (i = 0; i &#x3C;100; i++)\n        printf(\"%d \", rand()%100);\n \n    return 0;\n}\n</code></pre>\n<p>By a little hit and trial we find that the server generates 100 numbers using the above algorithm and checks in reverse order.\nSo <a href=\"/guess-073f8828864c0e064cd4b48018ed7568.py\">here</a> is a quick dirty client to handle the same.</p>\n<pre><code class=\"language-python\">from pwn import *\nimport subprocess\ns=remote('school.fluxfingers.net',1523)\na=s.recv(1000,timeout=1)\nprint a\nall=re.search('have .* on',a).group()[5:13].split(':')\nseed=20151021000000\nseed+=int(all[0])*10000\nseed+=int(all[1])*100\nseed+=int(all[2])\nres=subprocess.check_output([\"./lol\", str(seed)]).split()[::-1]\nprint res,\"len\",len(res)\nfor i in res:\n    print i,\n    s.send(str(i))\n    a=s.recv(100)   \n    print a\n</code></pre>\n<p>Flag</p>\n<blockquote>\n<p>flag{don't<em>use</em>LCGs<em>for</em>any<em>guessing</em>competition}</p>\n</blockquote>","relativePath":"writeups/hack.lu-ctf-2015/coding/GuessTheNumber/sudhackar"}}