{"pageContext":{"html":"<p><a href=\"ctf=ectf-teaser-2015\"></a>\n<a href=\"type=reverse\"></a>\n<a href=\"tags=gdb,golang\"></a>\n<a href=\"tools=gdb\"></a>\n<a href=\"techniques=breakpoints\"></a></p>\n<p>So what we have here is a <a href=\"../BestShell_d3bed024e5edcddeadade8a638247f5e.zip\">zip</a> file. On extracting it we get a single executable.</p>\n<pre><code class=\"language-bash\">$ file bestshell\nbestshell: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.24, BuildID[sha1]=8b4c45947ca2795d92a94c560d91183710b4fea2, not stripped\n</code></pre>\n<p>A little bit of analysis shows us it was written in <a href=\"https://github.com/golang\">Golang</a>. So I had to install Go as I had never used it before.</p>\n<p>Its brief output!!</p>\n<pre><code class=\"language-bash\">$ ./bestshell \n    _               _       _          _ _ \n    | |__   ___  ___| |_ ___| |__   ___| | |\n    | '_ \\ / _ \\/ __| __/ __| '_ \\ / _ \\ | |\n    | |_) |  __/\\__ \\ |_\\__ \\ | | |  __/ | |\n    |_.__/ \\___||___/\\__|___/_| |_|\\___|_|_| \n\nAvailable commands: 5azWRE, Ax7lIl, 312TUo, UgZInz\n>> 5azWRE \ntotal 84\n-rwxr-x--x 1 sudhakar sudhakar 36632 Oct  8 21:46 bestshell\n-rw-r--r-- 1 sudhakar sudhakar 38191 Oct 10 10:22 bestshell.c\n-rw-r--r-- 1 sudhakar sudhakar    59 Oct 10 14:36 peda-session-bestshell.txt\n-rw-r--r-- 1 sudhakar sudhakar     1 Oct 10 12:56 peda-session-ls.txt\n\n>> Ax7lIl \nTue Oct 13 19:16:55 IST 2015\n\n>> 312TUo \nReally? You think it's thaat easy?\n\n>> UgZInz\nJust... GO home. Please.\n\n>> \n</code></pre>\n<p>Gives no hint too. Lets load it in gdb-peda. Go has C-like main function as main.main. Lets set up a breakpoint and start. Stepping through the program we see</p>\n<pre><code class=\"language-bash\">gdb-peda$ \n[----------------------------------registers-----------------------------------]\nRAX: 0x4044d3 (\"fOaFIcEPA*usHwivkh$Jl)41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\")\nRBX: 0xc210000030 --> 0xc210012120 --> 0x0 \nRCX: 0x80000 \nRDX: 0x68 ('h')\nRSI: 0x1cb50 \nRDI: 0x40005555 ('UU')\nRBP: 0x7ffff7e55f60 --> 0x7ffff7e55f80 --> 0x0 \nRSP: 0x7ffff7e556f0 --> 0x0 \nRIP: 0x4020c4 (&#x3C;main.main+318>: movzx  eax,BYTE PTR [rax])\nR8 : 0xbfffbfffbfffbfff \nR9 : 0x40000000 ('')\nR10: 0x4000 ('')\nR11: 0x7ffff7dd0950 --> 0x400000001 \nR12: 0x7ffff74c9aa0 (cmp    rsp,QWORD PTR fs:0x70)\nR13: 0xc210002200 --> 0x7ffff7b1a4a0 --> 0x7ffff7564170 (cmp    rsp,QWORD PTR fs:0x70)\nR14: 0x0 \nR15: 0x0\nEFLAGS: 0x206 (carry PARITY adjust zero sign trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n   0x4020b8 &#x3C;main.main+306>:    mov    rax,QWORD PTR [rbp-0x48]\n   0x4020bc &#x3C;main.main+310>:    mov    BYTE PTR [rax+0x9],dl\n   0x4020bf &#x3C;main.main+313>:    mov    eax,0x4044d3\n=> 0x4020c4 &#x3C;main.main+318>:    movzx  eax,BYTE PTR [rax]\n   0x4020c7 &#x3C;main.main+321>:    mov    BYTE PTR [rbp-0x640],al\n   0x4020cd &#x3C;main.main+327>:    mov    eax,0x4044e7\n   0x4020d2 &#x3C;main.main+332>:    movzx  eax,BYTE PTR [rax]\n   0x4020d5 &#x3C;main.main+335>:    mov    BYTE PTR [rbp-0x63f],al\n[------------------------------------stack-------------------------------------]\n0000| 0x7ffff7e556f0 --> 0x0 \n0008| 0x7ffff7e556f8 --> 0x0 \n0016| 0x7ffff7e55700 --> 0x0 \n0024| 0x7ffff7e55708 --> 0x0 \n0032| 0x7ffff7e55710 --> 0x0 \n0040| 0x7ffff7e55718 --> 0x0 \n0048| 0x7ffff7e55720 --> 0x0 \n0056| 0x7ffff7e55728 --> 0x0 \n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\n0x00000000004020c4  41  in /home/kishor/code/go/src/github.com/kbhat95/bestshell/bestshell.go\n</code></pre>\n<p>Notice RAX and the next instruction. $al='f'\nSeems like starting of flag :p</p>\n<p>Stepping though we find similar strings in the flow.</p>\n<pre><code>RAX: 0x4044d3 (\"fOaFIcEPA*usHwivkh$Jl)41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\")\nRAX: 0x66 ('f')\nRAX: 0x4044e7 (\"l)41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\")\nRAX: 0x6c ('l')\nRAX: 0x4044d5 (\"aFIcEPA*usHwivkh$Jl)41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\")\nRAX: 0x61 ('a')\nRAX: 0x404504 --> 0x7d7b264c67 ('gL&#x26;{}')\nRAX: 0x67 ('g')\nRAX: 0x404507 --> 0x7d7b ('{}')\nRAX: 0x7b ('{')\nRAX: 0x4044c4 (\"oVq39bNjS2nG^#XfOaFIcEPA*usHwivkh$Jl)41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\")\nRAX: 0x6f ('o')\nRAX: 0x4044e4 (\"h$Jl)41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\")\nRAX: 0x68 ('h')\nRAX: 0x4044fc (\"mDZrxU@YgL&#x26;{}\")\nRAX: 0x6d ('m')\nRAX: 0x4044f9 (\"y6zmDZrxU@YgL&#x26;{}\")\nRAX: 0x79 ('y')\nRAX: 0x4044cf (\"G^#XfOaFIcEPA*usHwivkh$Jl)41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\")\nRAX: 0x47 ('G')\nRAX: 0x4044d4 (\"OaFIcEPA*usHwivkh$Jl)41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\")\nRAX: 0x4f ('O')\nRAX: 0x4044f0 (\"dK!CpRt87y6zmDZrxU@YgL&#x26;{}\")\nRAX: 0x64 ('d')\nRAX: 0x4044dd (\"usHwivkh$Jl)41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\")\nRAX: 0x75 ('u')\nRAX: 0x4044f5 (\"Rt87y6zmDZrxU@YgL&#x26;{}\")\nRAX: 0x52 ('R')\nRAX: 0x4044e9 (\"41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\")\nRAX: 0x34 ('4')\nRAX: 0x4044e0 (\"wivkh$Jl)41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\")\nRAX: 0x77 ('w')\nRAX: 0x4044c7 (\"39bNjS2nG^#XfOaFIcEPA*usHwivkh$Jl)41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\")\nRAX: 0x33 ('3')\nRAX: 0x4044de (\"sHwivkh$Jl)41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\")\nRAX: 0x73 ('s')\nRAX: 0x30 ('0')\nRAX: 0x4044fc (\"mDZrxU@YgL&#x26;{}\")\nRAX: 0x6d ('m')\nRAX: 0x4044c7 (\"39bNjS2nG^#XfOaFIcEPA*usHwivkh$Jl)41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\")\nRAX: 0x33 ('3')\nRAX: 0x404508 --> 0x7d ('}')\nRAX: 0x7d ('}')\n</code></pre>\n<p>We have our flag</p>\n<blockquote>\n<p>flag{ohmyGOduR4w3s0m3}</p>\n</blockquote>\n<p>Yea! and so are you ;)</p>"}}