{"pageContext":{"html":"<p><a href=\"ctf=9447-2015\"></a>\n<a href=\"type=reversing\"></a>\n<a href=\"tags=xor,memcmp\"></a>\n<a href=\"tools=gdb-peda,Hopper\"></a></p>\n<h1>The <em>real</em> flag finder (Reversing 70)</h1>\n<p>So we are given an <a href=\"/flagFinderRedux-e72e7ac9b16b8f40acd337069f94d524-e72e7ac9b16b8f40acd337069f94d524.\">executable</a>.</p>\n<pre><code class=\"language-bash\">$ file  flagFinderRedux-e72e7ac9b16b8f40acd337069f94d524\nflagFinderRedux-e72e7ac9b16b8f40acd337069f94d524: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.24, BuildID[sha1]=8c0c9c0d5c39ff0cc1954fa8682288b6169b8fff, stripped\n</code></pre>\n<p>A quick decompilation.</p>\n<pre><code class=\"language-c\">  if ( argc == 2 )\n  {\n    v10 = (unsigned int)n - 1LL;\n    v3 = alloca(16 * (((unsigned __int64)(unsigned int)n + 15) / 0x10));\n    dest = (char *)&#x26;v6;\n    strcpy((char *)&#x26;v6, src);\n    v9 = 0;\n    v8 = 0;\n    while ( memcmp(dest, \"9447\", 4uLL) )\n    {\n      v4 = v8 % (unsigned int)n;\n      v5 = dest[v8 % (unsigned int)n];\n      dest[v4] = (unsigned __int64)sub_40060D() ^ v5;\n      ++v8;\n    }\n    if ( !memcmp(dest, *(const void **)(v6 + 8), (unsigned int)n) )\n      printf(\"The flag is %s\\n\", *(_QWORD *)(v6 + 8), v6);\n    else\n      puts(\"Try again\");\n    result = 0LL;\n  }\n  else\n  {\n    printf(\"Usage: %s &#x3C;password>\\n\", *(_QWORD *)v6, v6);\n    result = 1LL;\n  }\n  return result;\n</code></pre>\n<p>As it is quite clear all we have to do is to check the last memcmp string to which the given password is compared.\nWe objdump the file and find memcmp in it and check its passed parameters- All in this snippet.</p>\n<pre><code class=\"language-bash\">sudhakar@Hack-Machine:~/Desktop/ctf/sep_15/9447-ctf/reversing$ objdump -S ./flagFinderRedux-e72e7ac9b16b8f40acd337069f94d524 | grep memcmp\n0000000000400500 &#x3C;memcmp@plt>:\n  400703:   e8 f8 fd ff ff          callq  400500 &#x3C;memcmp@plt>\n  400729:   e8 d2 fd ff ff          callq  400500 &#x3C;memcmp@plt>\nsudhakar@Hack-Machine:~/Desktop/ctf/sep_15/9447-ctf/reversing$ gdb -q ./flagFinderRedux-e72e7ac9b16b8f40acd337069f94d524 \nReading symbols from ./flagFinderRedux-e72e7ac9b16b8f40acd337069f94d524...(no debugging symbols found)...done.\ngdb-peda$ b *0x400729\nBreakpoint 1 at 0x400729\ngdb-peda$ r lol\nStarting program: /home/sudhakar/Desktop/ctf/sep_15/9447-ctf/reversing/flagFinderRedux-e72e7ac9b16b8f40acd337069f94d524 lol\nwarning: the debug information found in \"/lib64/ld-2.19.so\" does not match \"/lib64/ld-linux-x86-64.so.2\" (CRC mismatch).\n\n[----------------------------------registers-----------------------------------]\nRAX: 0x7fffffffe0d0 (\"9447{C0ngr47ulaT1ons_p4l_buddy_y0Uv3_solved_the_re4l__H4LT1N6_prObL3M}\")\nRBX: 0x3 \nRCX: 0x7fffffffe57f --> 0x5f474458006c6f6c ('lol')\nRDX: 0x46 ('F')\nRSI: 0x7fffffffe57f --> 0x5f474458006c6f6c ('lol')\nRDI: 0x7fffffffe0d0 (\"9447{C0ngr47ulaT1ons_p4l_buddy_y0Uv3_solved_the_re4l__H4LT1N6_prObL3M}\")\nRBP: 0x7fffffffe170 --> 0x0 \nRSP: 0x7fffffffe0d0 (\"9447{C0ngr47ulaT1ons_p4l_buddy_y0Uv3_solved_the_re4l__H4LT1N6_prObL3M}\")\nRIP: 0x400729 (call   0x400500 &#x3C;memcmp@plt>)\nR8 : 0x46 ('F')\nR9 : 0x0 \nR10: 0x7fffffffde90 --> 0x0 \nR11: 0x7ffff7b9dc70 --> 0xfffdb3e0fffdb10f \nR12: 0x7fffffffe120 --> 0x7fffffffe258 --> 0x7fffffffe519 (\"/home/sudhakar/Desktop/ctf/sep_15/9447-ctf/reversing/flagFinderRedux-e72e7ac9b16b8f40acd337069f94d524\")\nR13: 0x69 ('i')\nR14: 0x0 \nR15: 0x0\nEFLAGS: 0x216 (carry PARITY ADJUST zero sign trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n   0x40071f:    mov    rax,QWORD PTR [rbp-0x28]\n   0x400723:    mov    rsi,rcx\n   0x400726:    mov    rdi,rax\n=> 0x400729:    call   0x400500 &#x3C;memcmp@plt>\n   0x40072e:    test   eax,eax\n   0x400730:    jne    0x400751\n   0x400732:    mov    rax,QWORD PTR [rbp-0x50]\n   0x400736:    add    rax,0x8\nGuessed arguments:\narg[0]: 0x7fffffffe0d0 (\"9447{C0ngr47ulaT1ons_p4l_buddy_y0Uv3_solved_the_re4l__H4LT1N6_prObL3M}\")\narg[1]: 0x7fffffffe57f --> 0x5f474458006c6f6c ('lol')\narg[2]: 0x46 ('F')\narg[3]: 0x7fffffffe57f --> 0x5f474458006c6f6c ('lol')\n[------------------------------------stack-------------------------------------]\n0000| 0x7fffffffe0d0 (\"9447{C0ngr47ulaT1ons_p4l_buddy_y0Uv3_solved_the_re4l__H4LT1N6_prObL3M}\")\n0008| 0x7fffffffe0d8 (\"gr47ulaT1ons_p4l_buddy_y0Uv3_solved_the_re4l__H4LT1N6_prObL3M}\")\n0016| 0x7fffffffe0e0 (\"1ons_p4l_buddy_y0Uv3_solved_the_re4l__H4LT1N6_prObL3M}\")\n0024| 0x7fffffffe0e8 (\"_buddy_y0Uv3_solved_the_re4l__H4LT1N6_prObL3M}\")\n0032| 0x7fffffffe0f0 (\"0Uv3_solved_the_re4l__H4LT1N6_prObL3M}\")\n0040| 0x7fffffffe0f8 (\"ved_the_re4l__H4LT1N6_prObL3M}\")\n0048| 0x7fffffffe100 (\"re4l__H4LT1N6_prObL3M}\")\n0056| 0x7fffffffe108 (\"LT1N6_prObL3M}\")\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\n\nBreakpoint 1, 0x0000000000400729 in ?? ()\n</code></pre>\n<p>will give us flag</p>\n<blockquote>\n<p>9447{C0ngr47ulaT1ons<em>p4l</em>buddy<em>y0Uv3</em>solved<em>the</em>re4l_<em>H4LT1N6</em>prObL3M}</p>\n</blockquote>"}}