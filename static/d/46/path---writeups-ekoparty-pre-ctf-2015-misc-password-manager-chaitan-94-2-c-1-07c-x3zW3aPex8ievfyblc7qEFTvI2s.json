{"pageContext":{"html":"<p><a href=\"ctf=ekoparty-2015\"></a>\n<a href=\"type=misc\"></a>\n<a href=\"tags=pwsafe,john\"></a>\n<a href=\"tools=john\"></a>\n<a href=\"techniques=bruteforce-attack\"></a></p>\n<h1>Password Manager (misc-100)</h1>\n<p>We're given a <a href=\"/mypasswords-79634d024889733b0a196ebbd8182741.\">Password Safe V3 database</a> and a hint: [a-zA-Z0-9]{0,4}. So, time to use <a href=\"http://www.openwall.com/john/\">john</a> and crack it open!</p>\n<p>Let's run <a href=\"https://github.com/piyushcse29/john-the-ripper/blob/master/src/pwsafe2john.c\">pwsafe2john</a> on it and get a hash first, so that john can crack the password from the produced hash.</p>\n<p><code>bash $ pwsafe2john mypasswords > hash.txt</code></p>\n<p>We also had a hint, so instead of letting john brute-force all possibilities, let's generate a wordlist and then run john using it:</p>\n<p>`<code></code>python\nALNUM = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\nc = 0\nq = ''</p>\n<p>def rec(i, s):\nif i > 4: return\nglobal c, q\nc += 1\nq += ''.join(s + ['\\n'])\nif c % 100000 == 0:\nwith open(\"wordlist\", \"a\") as f:\nf.write(q)\nq = ''\nfor a in ALNUM:\nrec(i + 1, s + [a])</p>\n<p>rec(0, [])\n`<code></code></p>\n<p>After running the above code, our wordlist will be generated (roughly 72 MB :P). Now, we just have to give this to john, and it is going to crack the password for us.</p>\n<p><code>bash $ john -w=wordlist hash.txt</code></p>\n<p>Now let it run for a few minutes.. and we see that john cracked it: 'Ek0'</p>\n<p>Now installed <a href=\"http://pwsafe.info/\">pwsafe software</a>, and opened the given database with the password 'Ek0'</p>\n<p>Aaand there's our flag:</p>\n<blockquote>\n<p>EKO{password_managers_rulez}</p>\n</blockquote>","relativePath":"writeups/ekoparty-pre-ctf-2015/misc/password-manager/chaitan94"}}