{"pageContext":{"html":"<p><a href=\"ctf=blaze-2018\"></a>\n<a href=\"type=re\"></a>\n<a href=\"tags=game\"></a>\n<a href=\"techniques=bruteforce\"></a></p>\n<h1>smokemebaby (re-420)</h1>\n<p>`<code></code>\nget this files</p>\n<p>solve at: smokeme.420blaze.in tcp 12345</p>\n<p>author: vito</p>\n<p>solves: ~30\n`<code></code></p>\n<p>This was a rust compiled binary. In main()->check(), there were 39 check<em>i functions to verify the i'th character based on some equations.\nIf the check failed check</em>i() returned i as the exit code. This made it perfect for bruteforce. Iterate through your keyspace unless the exit code increases, repeat.</p>\n<p>driver script </p>\n<p>`<code></code>python\nimport subprocess\nimport string</p>\n<p>prev = [\"A\" for i in xrange(42)]</p>\n<h1>flag = \"on anntada ona? Somebnefbbeafd roia me a\"</h1>\n<p>flag = \"\"\nfor i, j in enumerate(flag):\nprev[i] = j</p>\n<p>for i in xrange(len(flag),42):\ncnt = []\nfor j in string.lowercase+string.digits+string.uppercase+\" &#x3C;>,.?/\"':;{}[]\\~`!@#$%^&#x26;*()_+=-\":\nprev[i] = j\nopen(\"input\", \"w+\").write(\"\".join(prev))\nd = subprocess.Popen(\"gdb -q -x ./plz.py \", shell=True, stdout=subprocess.PIPE).stdout.read().strip()\ntry:\nc = int(d.split(\":::::\")[1])\n# print c,\nexcept:\nc = -1\ncnt.append((c,j))\nprint cnt\nbest = sorted(cnt ,key=lambda x: x[0], reverse=True)[0]\nprev[i] = best[1]\nprint \"\".join(prev)</p>\n<p>\"\"\"\necho -ne \"on anntada ona? Somebnefbbeafd roia me a\"| base64 |nc smokeme.420blaze.in 12345\nsend your solution as base64, followed by a newline\n96667aaad70646abc06a8b44b1016e94e3897dd5a95dff21b6e7a9628a823d06\nThe flag is: blaze{a0ddb69ede14231576e7f0241623723385814f32}\n\"\"\"\n`<code></code></p>\n<p>gdb helper</p>\n<p>`<code></code>python\nimport gdb</p>\n<p>gdb.execute('file ../96667aaad70646abc06a8b44b1016e94e3897dd5a95dff21b6e7a9628a823d06')\ngdb.execute(\"set verbose off\")\ngdb.execute(\"run &#x3C; input > output\")\ngdb.execute(\"set confirm off\")\nexit = int(gdb.parse<em>and</em>eval(\"$<em>exitcode\").cast(gdb.lookup</em>type('uint32_t')))\nprint(\":::::%d:::::\" % exit)\ngdb.execute('quit')\n`<code></code></p>","relativePath":"writeups/blaze-ctf-2018/re/smokemebaby/sudhackar"}}