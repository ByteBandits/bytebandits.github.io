{"pageContext":{"html":"<p><a href=\"ctf=hack.lu-2015\"></a>\n<a href=\"type=coding\"></a>\n<a href=\"tags=random\"></a></p>\n<h1>GuessTheNumber (coding-150)</h1>\n<p><code>The teacher of your programming class gave you a tiny little task: just write a guess-my-number script that beats his script. He also gave you some hard facts: he uses some LCG with standard glibc LCG parameters the LCG is seeded with server time using number format YmdHMS (python strftime syntax) numbers are from 0 up to (including) 99 numbers should be sent as ascii string You can find the service on school.fluxfingers.net:1523</code></p>\n<p><code>bash $ nc school.fluxfingers.net 1523 Welcome to the awesome guess-my-number game! It's 22.10.2015 today and we have 13:01:49 on the server right now. Today's goal is easy: just guess my 100 numbers on the first try within at least 30 seconds from now on. Ain't difficult, right? Now, try the first one: 99 Wrong! You lost the game. The right answer would have been '61'. Quitting.</code>\nSo here we have a random number generator and we have to guess 100 numbers on the server.\nSearching about LCG we land on <a href=\"http://rosettacode.org/wiki/Linear_congruential_generator#C\">this</a> page.\nThe seed is given by the server in the message.It is the standard rand_r function in glibc with same parameters. Also all numbers are less than 100 so we need a mod 100 for each number.</p>\n<p>`<code></code>c\nint main(int argc, char **argv)\n{\nrseed = atoi(argv[1]);\nint i;\nfor (i = 0; i &#x3C;100; i++)\nprintf(\"%d \", rand()%100);</p>\n<pre><code>return 0;\n</code></pre>\n<p>}\n`<code></code>\nBy a little hit and trial we find that the server generates 100 numbers using the above algorithm and checks in reverse order.\nSo <a href=\"/guess-073f8828864c0e064cd4b48018ed7568.py\">here</a> is a quick dirty client to handle the same.</p>\n<p><code>python from pwn import * import subprocess s=remote('school.fluxfingers.net',1523) a=s.recv(1000,timeout=1) print a all=re.search('have .* on',a).group()[5:13].split(':') seed=20151021000000 seed+=int(all[0])*10000 seed+=int(all[1])*100 seed+=int(all[2]) res=subprocess.check_output([\"./lol\", str(seed)]).split()[::-1] print res,\"len\",len(res) for i in res: print i, s.send(str(i)) a=s.recv(100) print a</code></p>\n<p>Flag</p>\n<blockquote>\n<p>flag{don't<em>use</em>LCGs<em>for</em>any<em>guessing</em>competition}</p>\n</blockquote>","relativePath":"writeups/hack.lu-ctf-2015/coding/GuessTheNumber/sudhackar"}}