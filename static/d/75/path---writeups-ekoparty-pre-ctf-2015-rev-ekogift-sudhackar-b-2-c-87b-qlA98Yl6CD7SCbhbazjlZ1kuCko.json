{"pageContext":{"html":"<p><a href=\"ctf=ekoparty-2015\"></a>\n<a href=\"type=reverse\"></a>\n<a href=\"tags=\"></a>\n<a href=\"tools=retdec\"></a>\n<a href=\"techniques=decompilation\"></a></p>\n<p>So we have <a href=\"/reversing25-b6772941b1e86e8b5e179937908f51da.zip\">zip</a>\nOn extracting it we get a single file.\n<code>sh $ file GIFT.exe GIFT.exe: PE32 executable (console) Intel 80386 (stripped to external PDB), for MS Windows</code>\nPE32! we give it to <a href=\"https://retdec.com/decompilation/\">retdec</a> for decompilation.\nAnd we get <a href=\"/GIFT-9a22773402eed5714c6480ecab7fd9cb.c\">GIFT.c</a>.</p>\n<p>Going through the code we see something.\n<code>c if (*v3 == 69) { // 0x401c2d if (*(char *)(g6 + 1) == 75) { // 0x401c33 if (*(char *)(g6 + 2) == 79) { // 0x401c39 if (*(char *)(g6 + 3) == 123) { // 0x401c3f if (*(char *)(g6 + 4) == 116) { // 0x401c45 if (*(char *)(g6 + 5) == 104) { // 0x401c4b if (*(char *)(g6 + 6) == 105) { // 0x401c51 if (*(char *)(g6 + 7) == 115) { // 0x401c57 if (*(char *)(g6 + 8) == 95) { // 0x401c5d if (*(char *)(g6 + 9) == 105) { // 0x401c63 if (*(char *)(g6 + 10) == 115) { // 0x401c69 if (*(char *)(g6 + 11) == 95) { // 0x401c6f if (*(char *)(g6 + 12) == 97) { // 0x401c75 if (*(char *)(g6 + 13) == 95) { // 0x401c7b if (*(char *)(g6 + 14) == 103) { // 0x401c81 if (*(char *)(g6 + 15) == 105) { // 0x401c87 if (*(char *)(g6 + 16) == 102) { // 0x401c8d if (*(char *)(g6 + 17) == 116) { // 0x401c97 if (*(char *)(g6 + 18) == 125) { // 0x401ca1 printf(\"Great! your flag is %s\\n\", v3); }</code>\nLooks like ascii values are hardcoded.\n<code>python flag=[69,75,79,1123,116,104,105,115,95,105,115,95,97,95,103,105,102,116,125] print ''.join(chr(i) for i in flag)</code></p>\n<p>gives us FLAG</p>\n<blockquote>\n<p>EKO{this<em>is</em>a_gift}</p>\n</blockquote>","relativePath":"writeups/ekoparty-pre-ctf-2015/rev/ekogift/sudhackar"}}