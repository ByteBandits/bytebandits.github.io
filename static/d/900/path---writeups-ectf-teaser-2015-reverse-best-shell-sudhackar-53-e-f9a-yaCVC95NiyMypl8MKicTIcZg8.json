{"pageContext":{"html":"<p><a href=\"ctf=ectf-teaser-2015\"></a>\n<a href=\"type=reverse\"></a>\n<a href=\"tags=gdb,golang\"></a>\n<a href=\"tools=gdb\"></a>\n<a href=\"techniques=breakpoints\"></a></p>\n<p>So what we have here is a <a href=\"/BestShell_d3bed024e5edcddeadade8a638247f5e-d3bed024e5edcddeadade8a638247f5e.zip\">zip</a> file. On extracting it we get a single executable.</p>\n<p><code>bash $ file bestshell bestshell: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.24, BuildID[sha1]=8b4c45947ca2795d92a94c560d91183710b4fea2, not stripped</code></p>\n<p>A little bit of analysis shows us it was written in <a href=\"https://github.com/golang\">Golang</a>. So I had to install Go as I had never used it before.</p>\n<p>Its brief output!!</p>\n<p>`<code></code>bash\n$ ./bestshell\n_               _       _          _ _\n| |__   <strong>_  _</strong>| |_ <strong>_| |</strong>   <strong><em>| | |\n| '</em> \\ / _ / __| __/ _<em>| '</em> \\ / _ \\ | |\n| |_) |  __/\\</strong> \\ |___ \\ | | |  <strong>/ | |\n|_.</strong>/ _<strong>||_</strong>/__|<strong><em>/</em>| |<em>|\\</em></strong>|<em>|</em>| </p>\n<p>Available commands: 5azWRE, Ax7lIl, 312TUo, UgZInz</p>\n<blockquote>\n<blockquote>\n<p>5azWRE\ntotal 84\n-rwxr-x--x 1 sudhakar sudhakar 36632 Oct  8 21:46 bestshell\n-rw-r--r-- 1 sudhakar sudhakar 38191 Oct 10 10:22 bestshell.c\n-rw-r--r-- 1 sudhakar sudhakar    59 Oct 10 14:36 peda-session-bestshell.txt\n-rw-r--r-- 1 sudhakar sudhakar     1 Oct 10 12:56 peda-session-ls.txt</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>Ax7lIl\nTue Oct 13 19:16:55 IST 2015</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>312TUo\nReally? You think it's thaat easy?</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>UgZInz\nJust... GO home. Please.</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>`<code></code></p>\n</blockquote>\n</blockquote>\n<p>Gives no hint too. Lets load it in gdb-peda. Go has C-like main function as main.main. Lets set up a breakpoint and start. Stepping through the program we see</p>\n<p><code>bash gdb-peda$ [----------------------------------registers-----------------------------------] RAX: 0x4044d3 (\"fOaFIcEPA*usHwivkh$Jl)41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\") RBX: 0xc210000030 --> 0xc210012120 --> 0x0 RCX: 0x80000 RDX: 0x68 ('h') RSI: 0x1cb50 RDI: 0x40005555 ('UU') RBP: 0x7ffff7e55f60 --> 0x7ffff7e55f80 --> 0x0 RSP: 0x7ffff7e556f0 --> 0x0 RIP: 0x4020c4 (&#x3C;main.main+318>: movzx eax,BYTE PTR [rax]) R8 : 0xbfffbfffbfffbfff R9 : 0x40000000 ('') R10: 0x4000 ('') R11: 0x7ffff7dd0950 --> 0x400000001 R12: 0x7ffff74c9aa0 (cmp rsp,QWORD PTR fs:0x70) R13: 0xc210002200 --> 0x7ffff7b1a4a0 --> 0x7ffff7564170 (cmp rsp,QWORD PTR fs:0x70) R14: 0x0 R15: 0x0 EFLAGS: 0x206 (carry PARITY adjust zero sign trap INTERRUPT direction overflow) [-------------------------------------code-------------------------------------] 0x4020b8 &#x3C;main.main+306>: mov rax,QWORD PTR [rbp-0x48] 0x4020bc &#x3C;main.main+310>: mov BYTE PTR [rax+0x9],dl 0x4020bf &#x3C;main.main+313>: mov eax,0x4044d3 => 0x4020c4 &#x3C;main.main+318>: movzx eax,BYTE PTR [rax] 0x4020c7 &#x3C;main.main+321>: mov BYTE PTR [rbp-0x640],al 0x4020cd &#x3C;main.main+327>: mov eax,0x4044e7 0x4020d2 &#x3C;main.main+332>: movzx eax,BYTE PTR [rax] 0x4020d5 &#x3C;main.main+335>: mov BYTE PTR [rbp-0x63f],al [------------------------------------stack-------------------------------------] 0000| 0x7ffff7e556f0 --> 0x0 0008| 0x7ffff7e556f8 --> 0x0 0016| 0x7ffff7e55700 --> 0x0 0024| 0x7ffff7e55708 --> 0x0 0032| 0x7ffff7e55710 --> 0x0 0040| 0x7ffff7e55718 --> 0x0 0048| 0x7ffff7e55720 --> 0x0 0056| 0x7ffff7e55728 --> 0x0 [------------------------------------------------------------------------------] Legend: code, data, rodata, value 0x00000000004020c4 41 in /home/kishor/code/go/src/github.com/kbhat95/bestshell/bestshell.go</code></p>\n<p>Notice RAX and the next instruction. $al='f'\nSeems like starting of flag :p</p>\n<p>Stepping though we find similar strings in the flow.</p>\n<p><code>RAX: 0x4044d3 (\"fOaFIcEPA*usHwivkh$Jl)41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\") RAX: 0x66 ('f') RAX: 0x4044e7 (\"l)41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\") RAX: 0x6c ('l') RAX: 0x4044d5 (\"aFIcEPA*usHwivkh$Jl)41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\") RAX: 0x61 ('a') RAX: 0x404504 --> 0x7d7b264c67 ('gL&#x26;{}') RAX: 0x67 ('g') RAX: 0x404507 --> 0x7d7b ('{}') RAX: 0x7b ('{') RAX: 0x4044c4 (\"oVq39bNjS2nG^#XfOaFIcEPA*usHwivkh$Jl)41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\") RAX: 0x6f ('o') RAX: 0x4044e4 (\"h$Jl)41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\") RAX: 0x68 ('h') RAX: 0x4044fc (\"mDZrxU@YgL&#x26;{}\") RAX: 0x6d ('m') RAX: 0x4044f9 (\"y6zmDZrxU@YgL&#x26;{}\") RAX: 0x79 ('y') RAX: 0x4044cf (\"G^#XfOaFIcEPA*usHwivkh$Jl)41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\") RAX: 0x47 ('G') RAX: 0x4044d4 (\"OaFIcEPA*usHwivkh$Jl)41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\") RAX: 0x4f ('O') RAX: 0x4044f0 (\"dK!CpRt87y6zmDZrxU@YgL&#x26;{}\") RAX: 0x64 ('d') RAX: 0x4044dd (\"usHwivkh$Jl)41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\") RAX: 0x75 ('u') RAX: 0x4044f5 (\"Rt87y6zmDZrxU@YgL&#x26;{}\") RAX: 0x52 ('R') RAX: 0x4044e9 (\"41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\") RAX: 0x34 ('4') RAX: 0x4044e0 (\"wivkh$Jl)41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\") RAX: 0x77 ('w') RAX: 0x4044c7 (\"39bNjS2nG^#XfOaFIcEPA*usHwivkh$Jl)41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\") RAX: 0x33 ('3') RAX: 0x4044de (\"sHwivkh$Jl)41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\") RAX: 0x73 ('s') RAX: 0x30 ('0') RAX: 0x4044fc (\"mDZrxU@YgL&#x26;{}\") RAX: 0x6d ('m') RAX: 0x4044c7 (\"39bNjS2nG^#XfOaFIcEPA*usHwivkh$Jl)41BTWeQdK!CpRt87y6zmDZrxU@YgL&#x26;{}\") RAX: 0x33 ('3') RAX: 0x404508 --> 0x7d ('}') RAX: 0x7d ('}')</code></p>\n<p>We have our flag</p>\n<blockquote>\n<p>flag{ohmyGOduR4w3s0m3}</p>\n</blockquote>\n<p>Yea! and so are you ;)</p>","relativePath":"writeups/ectf-teaser-2015/reverse/BestShell/sudhackar"}}