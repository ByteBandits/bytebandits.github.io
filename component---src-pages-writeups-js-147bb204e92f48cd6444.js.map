{"version":3,"sources":["webpack:///./src/pages/writeups.js","webpack:///./src/components/SEO.js"],"names":["Writeups","state","selectedCTF","undefined","selectedProblemType","selectedAuthor","render","_this2","this","_this$props","props","data","location","writeups","allSitePage","edges","filter","_ref","node","path","match","length","map","_ref2","Writeup","authors","w","author","elem","pos","arr","indexOf","problemTypes","problemType","ctfNames","ctfName","non_writeups","_ref3","console","log","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","_components_SEO__WEBPACK_IMPORTED_MODULE_4__","title","style","margin","rebass__WEBPACK_IMPORTED_MODULE_5__","flexWrap","mx","m","fontSize","color","onChange","e","setState","target","value","key","justifyContent","alignItems","writeup","idx","href","textDecoration","className","styles","card","background","getBG","p","bg","borderRadius","boxShadow","problemName","React","Component","query","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"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","file":"component---src-pages-writeups-js-147bb204e92f48cd6444.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/SEO\"\nimport { Flex, Box, Card } from 'rebass'\nimport styles from '../styles/writeups.module.css'\nimport Writeup from '../models/Writeup'\n\n\nexport default class Writeups extends React.Component {\n  state = {\n    selectedCTF: undefined,\n    selectedProblemType: undefined,\n    selectedAuthor: undefined,\n  }\n\n  render() {\n    const { data, location } = this.props\n\n    let writeups = data.allSitePage.edges\n      .filter(({node}) => (node.path.match(/\\//g) || []).length === 5)\n      .map(({node}) => new Writeup(node.path))\n\n    const authors = writeups.map((w) => w.author).filter((elem, pos, arr) => arr.indexOf(elem) === pos)\n    const problemTypes = writeups.map((w) => w.problemType).filter((elem, pos, arr) => arr.indexOf(elem) === pos)\n    const ctfNames = writeups.map((w) => w.ctfName).filter((elem, pos, arr) => arr.indexOf(elem) === pos)\n\n    const non_writeups = data.allSitePage.edges.filter(({node}) => (node.path.match(/\\//g) || []).length !== 5)\n    if (non_writeups.length > 0) {\n      console.log(\"Some non writeup pages were skipped\")\n      console.log(non_writeups)\n    }\n\n    if (this.state.selectedProblemType && this.state.selectedProblemType !== 'All') {\n      console.log(this.state.selectedProblemType)\n      writeups = writeups.filter((w) => w.problemType === this.state.selectedProblemType)\n    }\n\n    if (this.state.selectedCTF && this.state.selectedCTF !== 'All') {\n      console.log(this.state.selectedCTF)\n      writeups = writeups.filter((w) => w.ctfName === this.state.selectedCTF)\n    }\n\n    if (this.state.selectedAuthor && this.state.selectedAuthor !== 'All') {\n      console.log(this.state.selectedAuthor)\n      writeups = writeups.filter((w) => w.author === this.state.selectedAuthor)\n    }\n\n    return (\n      <Layout location={location}>\n        <SEO title=\"Writeups\" />\n        <div style={{margin: '24px auto 64px'}}>\n          <h1>Writeups</h1>\n          <Flex flexWrap='wrap' mx={-2}>\n            <Box m={2}>\n            <div style={{fontSize: '0.66em', color: 'grey'}}>Type</div>\n              <select onChange={(e) => this.setState({selectedProblemType: e.target.value})}>\n                <option value={undefined}>All</option>\n                {\n                  problemTypes.map((a) =>\n                    <option value={a} key={a}>\n                      {a}\n                    </option>\n                  )\n                }\n              </select>\n            </Box>\n            <Box m={2}>\n              <div style={{fontSize: '0.66em', color: 'grey'}}>CTF</div>\n              <select onChange={(e) => this.setState({selectedCTF: e.target.value})}>\n                <option value={undefined}>All</option>\n                {\n                  ctfNames.map((a) =>\n                    <option value={a} key={a}>\n                      {a}\n                    </option>\n                  )\n                }\n              </select>\n            </Box>\n            <Box m={2}>\n              <div style={{fontSize: '0.66em', color: 'grey'}}>Author</div>\n              <select onChange={(e) => this.setState({selectedAuthor: e.target.value})}>\n                <option value={undefined}>All</option>\n                {\n                  authors.map((a) =>\n                    <option value={a} key={a}>\n                      {a}\n                    </option>\n                  )\n                }\n              </select>\n            </Box>\n          </Flex>\n          <Flex flexWrap='wrap' mx={-2} justifyContent='center' alignItems='center'>\n            {writeups.map((writeup, idx) =>\n              <a href={writeup.path} style={{\n                color: 'inherit',\n                textDecoration: 'none',\n              }}>\n                <Card\n                  className={styles.card}\n                  style={{\n                    background: writeup.getBG(),\n                  }}\n                  p={3}\n                  m={3}\n                  bg='#ffffff'\n                  borderRadius={4}\n                  boxShadow='0 0 4px rgba(0, 0, 0, 0.16)'\n                >\n                  <p>{writeup.problemName}</p>\n                  <p>{writeup.problemType}</p>\n                  <p>{writeup.ctfName}</p>\n                  <p>{writeup.author}</p>\n                </Card>\n              </a>\n            )}\n          </Flex>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport const query = graphql`\n  query {\n    allSitePage(\n      filter: {\n        path: {\n          regex: \"/.*\\/writeups\\/.+$/i\"\n        }\n      },\n    ) {\n      edges {\n        node {\n          id\n          path\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}